// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GnmiJuniperTelemetryHeaderExtension {
    /// router name:export IP address
    #[prost(string, tag = "1")]
    pub system_id: ::prost::alloc::string::String,
    /// line card / RE (slot number)
    #[prost(uint32, tag = "2")]
    pub component_id: u32,
    /// PFE (if applicable)
    #[prost(uint32, tag = "3")]
    pub sub_component_id: u32,
    /// Internal sensor name
    #[prost(string, tag = "4")]
    pub sensor_name: ::prost::alloc::string::String,
    /// Sensor path in the subscribe request
    #[prost(string, tag = "5")]
    pub subscribed_path: ::prost::alloc::string::String,
    /// Internal sensor path in junos
    #[prost(string, tag = "6")]
    pub streamed_path: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub component: ::prost::alloc::string::String,
    /// Sequence number, monotonically increasing for each
    #[prost(uint64, tag = "8")]
    pub sequence_number: u64,
    /// Payload get timestamp in milliseconds
    #[prost(int64, tag = "9")]
    pub payload_get_timestamp: i64,
    /// Stream creation timestamp in milliseconds
    #[prost(int64, tag = "10")]
    pub stream_creation_timestamp: i64,
    /// Event timestamp in milliseconds
    #[prost(int64, tag = "11")]
    pub event_timestamp: i64,
    /// Export timestamp in milliseconds
    #[prost(int64, tag = "12")]
    pub export_timestamp: i64,
    /// Subsequence number
    #[prost(uint64, tag = "13")]
    pub sub_sequence_number: u64,
    /// End of marker
    #[prost(bool, tag = "14")]
    pub eom: bool,
}
/// Present as first gNMI update in all packets
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GnmiJuniperTelemetryHeader {
    /// router name:export IP address
    #[prost(string, tag = "1")]
    pub system_id: ::prost::alloc::string::String,
    /// line card / RE (slot number)
    #[prost(uint32, tag = "2")]
    pub component_id: u32,
    /// PFE (if applicable)
    #[prost(uint32, tag = "3")]
    pub sub_component_id: u32,
    /// Path contains useful information on identiying which sensor,
    /// resoruce string and producer the data corresponds to.
    /// "internal_sensor_name:internal_path:external_path:component"
    /// e.g.:
    /// "sensor_1006:/junos/system/linecard/cpu/memory/:/junos/system/linecard/cpu/memory/:PFE"
    #[prost(string, tag = "4")]
    pub path: ::prost::alloc::string::String,
    /// Sequence number, monotonically increasing for each
    /// system_id, component_id, sub_component_id + path.
    #[prost(uint64, tag = "5")]
    pub sequence_number: u64,
}
